Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLE_COLLON

Grammar

Rule 0     S' -> main
Rule 1     main -> program
Rule 2     program -> For
Rule 3     program -> While
Rule 4     program -> Dowhile
Rule 5     While -> while WhileCondition Block
Rule 6     WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS
Rule 7     Block -> Newline L_BRACES Newline Body Newline R_BRACES
Rule 8     For -> for forCondition Block
Rule 9     forCondition -> L_PARENTHESIS Assign SEMICOLON Check SEMICOLON Action R_PARENTHESIS
Rule 10    forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS
Rule 11    Dowhile -> do Block while WhileCondition
Rule 12    Assign -> ID ASSIGN ID
Rule 13    Assign -> ID ASSIGN NUMBER
Rule 14    Check -> Alnum EQUALS Alnum
Rule 15    Check -> Alnum NOTEQUALS Alnum
Rule 16    Check -> Alnum GREATER_THAN Alnum
Rule 17    Check -> Alnum LESSER_THAN Alnum
Rule 18    Check -> Alnum GREATER_THAN_OR_EQUAL_TO Alnum
Rule 19    Check -> Alnum LESSER_THAN_OR_EQUAL_TO Alnum
Rule 20    Action -> ID INCREMENT
Rule 21    Action -> ID DECREMENT
Rule 22    Action -> INCREMENT ID
Rule 23    Action -> DECREMENT ID
Rule 24    Action -> ID ASSIGN ID
Rule 25    Alnum -> ID
Rule 26    Alnum -> NUMBER
Rule 27    Newline -> Newline NEWLINE
Rule 28    Newline -> <empty>
Rule 29    Body -> statement
Rule 30    Body -> statement Body
Rule 31    Body -> program Body
Rule 32    Body -> <empty>

Terminals, with rules where they appear

ASSIGN               : 12 13 24
COMMA                : 10 10 10
DECREMENT            : 21 23
DOUBLE_COLLON        : 
EQUALS               : 14
GREATER_THAN         : 16
GREATER_THAN_OR_EQUAL_TO : 18
ID                   : 12 12 13 20 21 22 23 24 24 25
INCREMENT            : 20 22
LESSER_THAN          : 17
LESSER_THAN_OR_EQUAL_TO : 19
L_BRACES             : 7
L_PARENTHESIS        : 6 9 10
NEWLINE              : 27
NOTEQUALS            : 15
NUMBER               : 13 26
R_BRACES             : 7
R_PARENTHESIS        : 6 9 10
SEMICOLON            : 9 9 10 10
do                   : 11
error                : 
for                  : 8
statement            : 29 30
while                : 5 11

Nonterminals, with rules where they appear

Action               : 9 10 10
Alnum                : 14 14 15 15 16 16 17 17 18 18 19 19
Assign               : 9 10 10
Block                : 5 8 11
Body                 : 7 30 31
Check                : 6 9 10 10
Dowhile              : 4
For                  : 2
Newline              : 7 7 7 27
While                : 3
WhileCondition       : 5 11
forCondition         : 8
main                 : 0
program              : 1 31

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . program
    (2) program -> . For
    (3) program -> . While
    (4) program -> . Dowhile
    (8) For -> . for forCondition Block
    (5) While -> . while WhileCondition Block
    (11) Dowhile -> . do Block while WhileCondition

    for             shift and go to state 6
    while           shift and go to state 7
    do              shift and go to state 8

    main                           shift and go to state 1
    program                        shift and go to state 2
    For                            shift and go to state 3
    While                          shift and go to state 4
    Dowhile                        shift and go to state 5

state 1

    (0) S' -> main .



state 2

    (1) main -> program .

    $end            reduce using rule 1 (main -> program .)


state 3

    (2) program -> For .

    $end            reduce using rule 2 (program -> For .)
    statement       reduce using rule 2 (program -> For .)
    for             reduce using rule 2 (program -> For .)
    while           reduce using rule 2 (program -> For .)
    do              reduce using rule 2 (program -> For .)
    R_BRACES        reduce using rule 2 (program -> For .)
    NEWLINE         reduce using rule 2 (program -> For .)


state 4

    (3) program -> While .

    $end            reduce using rule 3 (program -> While .)
    statement       reduce using rule 3 (program -> While .)
    for             reduce using rule 3 (program -> While .)
    while           reduce using rule 3 (program -> While .)
    do              reduce using rule 3 (program -> While .)
    R_BRACES        reduce using rule 3 (program -> While .)
    NEWLINE         reduce using rule 3 (program -> While .)


state 5

    (4) program -> Dowhile .

    $end            reduce using rule 4 (program -> Dowhile .)
    statement       reduce using rule 4 (program -> Dowhile .)
    for             reduce using rule 4 (program -> Dowhile .)
    while           reduce using rule 4 (program -> Dowhile .)
    do              reduce using rule 4 (program -> Dowhile .)
    R_BRACES        reduce using rule 4 (program -> Dowhile .)
    NEWLINE         reduce using rule 4 (program -> Dowhile .)


state 6

    (8) For -> for . forCondition Block
    (9) forCondition -> . L_PARENTHESIS Assign SEMICOLON Check SEMICOLON Action R_PARENTHESIS
    (10) forCondition -> . L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS

    L_PARENTHESIS   shift and go to state 10

    forCondition                   shift and go to state 9

state 7

    (5) While -> while . WhileCondition Block
    (6) WhileCondition -> . L_PARENTHESIS Check R_PARENTHESIS

    L_PARENTHESIS   shift and go to state 12

    WhileCondition                 shift and go to state 11

state 8

    (11) Dowhile -> do . Block while WhileCondition
    (7) Block -> . Newline L_BRACES Newline Body Newline R_BRACES
    (27) Newline -> . Newline NEWLINE
    (28) Newline -> .

    L_BRACES        reduce using rule 28 (Newline -> .)
    NEWLINE         reduce using rule 28 (Newline -> .)

    Block                          shift and go to state 13
    Newline                        shift and go to state 14

state 9

    (8) For -> for forCondition . Block
    (7) Block -> . Newline L_BRACES Newline Body Newline R_BRACES
    (27) Newline -> . Newline NEWLINE
    (28) Newline -> .

    L_BRACES        reduce using rule 28 (Newline -> .)
    NEWLINE         reduce using rule 28 (Newline -> .)

    Block                          shift and go to state 15
    Newline                        shift and go to state 14

state 10

    (9) forCondition -> L_PARENTHESIS . Assign SEMICOLON Check SEMICOLON Action R_PARENTHESIS
    (10) forCondition -> L_PARENTHESIS . Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS
    (12) Assign -> . ID ASSIGN ID
    (13) Assign -> . ID ASSIGN NUMBER

    ID              shift and go to state 17

    Assign                         shift and go to state 16

state 11

    (5) While -> while WhileCondition . Block
    (7) Block -> . Newline L_BRACES Newline Body Newline R_BRACES
    (27) Newline -> . Newline NEWLINE
    (28) Newline -> .

    L_BRACES        reduce using rule 28 (Newline -> .)
    NEWLINE         reduce using rule 28 (Newline -> .)

    Block                          shift and go to state 18
    Newline                        shift and go to state 14

state 12

    (6) WhileCondition -> L_PARENTHESIS . Check R_PARENTHESIS
    (14) Check -> . Alnum EQUALS Alnum
    (15) Check -> . Alnum NOTEQUALS Alnum
    (16) Check -> . Alnum GREATER_THAN Alnum
    (17) Check -> . Alnum LESSER_THAN Alnum
    (18) Check -> . Alnum GREATER_THAN_OR_EQUAL_TO Alnum
    (19) Check -> . Alnum LESSER_THAN_OR_EQUAL_TO Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Check                          shift and go to state 19
    Alnum                          shift and go to state 20

state 13

    (11) Dowhile -> do Block . while WhileCondition

    while           shift and go to state 23


state 14

    (7) Block -> Newline . L_BRACES Newline Body Newline R_BRACES
    (27) Newline -> Newline . NEWLINE

    L_BRACES        shift and go to state 24
    NEWLINE         shift and go to state 25


state 15

    (8) For -> for forCondition Block .

    $end            reduce using rule 8 (For -> for forCondition Block .)
    statement       reduce using rule 8 (For -> for forCondition Block .)
    for             reduce using rule 8 (For -> for forCondition Block .)
    while           reduce using rule 8 (For -> for forCondition Block .)
    do              reduce using rule 8 (For -> for forCondition Block .)
    R_BRACES        reduce using rule 8 (For -> for forCondition Block .)
    NEWLINE         reduce using rule 8 (For -> for forCondition Block .)


state 16

    (9) forCondition -> L_PARENTHESIS Assign . SEMICOLON Check SEMICOLON Action R_PARENTHESIS
    (10) forCondition -> L_PARENTHESIS Assign . COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS

    SEMICOLON       shift and go to state 26
    COMMA           shift and go to state 27


state 17

    (12) Assign -> ID . ASSIGN ID
    (13) Assign -> ID . ASSIGN NUMBER

    ASSIGN          shift and go to state 28


state 18

    (5) While -> while WhileCondition Block .

    $end            reduce using rule 5 (While -> while WhileCondition Block .)
    statement       reduce using rule 5 (While -> while WhileCondition Block .)
    for             reduce using rule 5 (While -> while WhileCondition Block .)
    while           reduce using rule 5 (While -> while WhileCondition Block .)
    do              reduce using rule 5 (While -> while WhileCondition Block .)
    R_BRACES        reduce using rule 5 (While -> while WhileCondition Block .)
    NEWLINE         reduce using rule 5 (While -> while WhileCondition Block .)


state 19

    (6) WhileCondition -> L_PARENTHESIS Check . R_PARENTHESIS

    R_PARENTHESIS   shift and go to state 29


state 20

    (14) Check -> Alnum . EQUALS Alnum
    (15) Check -> Alnum . NOTEQUALS Alnum
    (16) Check -> Alnum . GREATER_THAN Alnum
    (17) Check -> Alnum . LESSER_THAN Alnum
    (18) Check -> Alnum . GREATER_THAN_OR_EQUAL_TO Alnum
    (19) Check -> Alnum . LESSER_THAN_OR_EQUAL_TO Alnum

    EQUALS          shift and go to state 30
    NOTEQUALS       shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESSER_THAN     shift and go to state 33
    GREATER_THAN_OR_EQUAL_TO shift and go to state 34
    LESSER_THAN_OR_EQUAL_TO shift and go to state 35


state 21

    (25) Alnum -> ID .

    EQUALS          reduce using rule 25 (Alnum -> ID .)
    NOTEQUALS       reduce using rule 25 (Alnum -> ID .)
    GREATER_THAN    reduce using rule 25 (Alnum -> ID .)
    LESSER_THAN     reduce using rule 25 (Alnum -> ID .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 25 (Alnum -> ID .)
    LESSER_THAN_OR_EQUAL_TO reduce using rule 25 (Alnum -> ID .)
    R_PARENTHESIS   reduce using rule 25 (Alnum -> ID .)
    SEMICOLON       reduce using rule 25 (Alnum -> ID .)
    COMMA           reduce using rule 25 (Alnum -> ID .)


state 22

    (26) Alnum -> NUMBER .

    EQUALS          reduce using rule 26 (Alnum -> NUMBER .)
    NOTEQUALS       reduce using rule 26 (Alnum -> NUMBER .)
    GREATER_THAN    reduce using rule 26 (Alnum -> NUMBER .)
    LESSER_THAN     reduce using rule 26 (Alnum -> NUMBER .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 26 (Alnum -> NUMBER .)
    LESSER_THAN_OR_EQUAL_TO reduce using rule 26 (Alnum -> NUMBER .)
    R_PARENTHESIS   reduce using rule 26 (Alnum -> NUMBER .)
    SEMICOLON       reduce using rule 26 (Alnum -> NUMBER .)
    COMMA           reduce using rule 26 (Alnum -> NUMBER .)


state 23

    (11) Dowhile -> do Block while . WhileCondition
    (6) WhileCondition -> . L_PARENTHESIS Check R_PARENTHESIS

    L_PARENTHESIS   shift and go to state 12

    WhileCondition                 shift and go to state 36

state 24

    (7) Block -> Newline L_BRACES . Newline Body Newline R_BRACES
    (27) Newline -> . Newline NEWLINE
    (28) Newline -> .

    NEWLINE         reduce using rule 28 (Newline -> .)
    statement       reduce using rule 28 (Newline -> .)
    for             reduce using rule 28 (Newline -> .)
    while           reduce using rule 28 (Newline -> .)
    do              reduce using rule 28 (Newline -> .)
    R_BRACES        reduce using rule 28 (Newline -> .)

    Newline                        shift and go to state 37

state 25

    (27) Newline -> Newline NEWLINE .

    L_BRACES        reduce using rule 27 (Newline -> Newline NEWLINE .)
    NEWLINE         reduce using rule 27 (Newline -> Newline NEWLINE .)
    statement       reduce using rule 27 (Newline -> Newline NEWLINE .)
    for             reduce using rule 27 (Newline -> Newline NEWLINE .)
    while           reduce using rule 27 (Newline -> Newline NEWLINE .)
    do              reduce using rule 27 (Newline -> Newline NEWLINE .)
    R_BRACES        reduce using rule 27 (Newline -> Newline NEWLINE .)


state 26

    (9) forCondition -> L_PARENTHESIS Assign SEMICOLON . Check SEMICOLON Action R_PARENTHESIS
    (14) Check -> . Alnum EQUALS Alnum
    (15) Check -> . Alnum NOTEQUALS Alnum
    (16) Check -> . Alnum GREATER_THAN Alnum
    (17) Check -> . Alnum LESSER_THAN Alnum
    (18) Check -> . Alnum GREATER_THAN_OR_EQUAL_TO Alnum
    (19) Check -> . Alnum LESSER_THAN_OR_EQUAL_TO Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Check                          shift and go to state 38
    Alnum                          shift and go to state 20

state 27

    (10) forCondition -> L_PARENTHESIS Assign COMMA . Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS
    (12) Assign -> . ID ASSIGN ID
    (13) Assign -> . ID ASSIGN NUMBER

    ID              shift and go to state 17

    Assign                         shift and go to state 39

state 28

    (12) Assign -> ID ASSIGN . ID
    (13) Assign -> ID ASSIGN . NUMBER

    ID              shift and go to state 40
    NUMBER          shift and go to state 41


state 29

    (6) WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .

    L_BRACES        reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)
    NEWLINE         reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)
    $end            reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)
    statement       reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)
    for             reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)
    while           reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)
    do              reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)
    R_BRACES        reduce using rule 6 (WhileCondition -> L_PARENTHESIS Check R_PARENTHESIS .)


state 30

    (14) Check -> Alnum EQUALS . Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Alnum                          shift and go to state 42

state 31

    (15) Check -> Alnum NOTEQUALS . Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Alnum                          shift and go to state 43

state 32

    (16) Check -> Alnum GREATER_THAN . Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Alnum                          shift and go to state 44

state 33

    (17) Check -> Alnum LESSER_THAN . Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Alnum                          shift and go to state 45

state 34

    (18) Check -> Alnum GREATER_THAN_OR_EQUAL_TO . Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Alnum                          shift and go to state 46

state 35

    (19) Check -> Alnum LESSER_THAN_OR_EQUAL_TO . Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Alnum                          shift and go to state 47

state 36

    (11) Dowhile -> do Block while WhileCondition .

    $end            reduce using rule 11 (Dowhile -> do Block while WhileCondition .)
    statement       reduce using rule 11 (Dowhile -> do Block while WhileCondition .)
    for             reduce using rule 11 (Dowhile -> do Block while WhileCondition .)
    while           reduce using rule 11 (Dowhile -> do Block while WhileCondition .)
    do              reduce using rule 11 (Dowhile -> do Block while WhileCondition .)
    R_BRACES        reduce using rule 11 (Dowhile -> do Block while WhileCondition .)
    NEWLINE         reduce using rule 11 (Dowhile -> do Block while WhileCondition .)


state 37

    (7) Block -> Newline L_BRACES Newline . Body Newline R_BRACES
    (27) Newline -> Newline . NEWLINE
    (29) Body -> . statement
    (30) Body -> . statement Body
    (31) Body -> . program Body
    (32) Body -> .
    (2) program -> . For
    (3) program -> . While
    (4) program -> . Dowhile
    (8) For -> . for forCondition Block
    (5) While -> . while WhileCondition Block
    (11) Dowhile -> . do Block while WhileCondition

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 25
    statement       shift and go to state 49
    R_BRACES        reduce using rule 32 (Body -> .)
    for             shift and go to state 6
    while           shift and go to state 7
    do              shift and go to state 8

  ! NEWLINE         [ reduce using rule 32 (Body -> .) ]

    Body                           shift and go to state 48
    program                        shift and go to state 50
    For                            shift and go to state 3
    While                          shift and go to state 4
    Dowhile                        shift and go to state 5

state 38

    (9) forCondition -> L_PARENTHESIS Assign SEMICOLON Check . SEMICOLON Action R_PARENTHESIS

    SEMICOLON       shift and go to state 51


state 39

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign . SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS

    SEMICOLON       shift and go to state 52


state 40

    (12) Assign -> ID ASSIGN ID .

    SEMICOLON       reduce using rule 12 (Assign -> ID ASSIGN ID .)
    COMMA           reduce using rule 12 (Assign -> ID ASSIGN ID .)


state 41

    (13) Assign -> ID ASSIGN NUMBER .

    SEMICOLON       reduce using rule 13 (Assign -> ID ASSIGN NUMBER .)
    COMMA           reduce using rule 13 (Assign -> ID ASSIGN NUMBER .)


state 42

    (14) Check -> Alnum EQUALS Alnum .

    R_PARENTHESIS   reduce using rule 14 (Check -> Alnum EQUALS Alnum .)
    SEMICOLON       reduce using rule 14 (Check -> Alnum EQUALS Alnum .)
    COMMA           reduce using rule 14 (Check -> Alnum EQUALS Alnum .)


state 43

    (15) Check -> Alnum NOTEQUALS Alnum .

    R_PARENTHESIS   reduce using rule 15 (Check -> Alnum NOTEQUALS Alnum .)
    SEMICOLON       reduce using rule 15 (Check -> Alnum NOTEQUALS Alnum .)
    COMMA           reduce using rule 15 (Check -> Alnum NOTEQUALS Alnum .)


state 44

    (16) Check -> Alnum GREATER_THAN Alnum .

    R_PARENTHESIS   reduce using rule 16 (Check -> Alnum GREATER_THAN Alnum .)
    SEMICOLON       reduce using rule 16 (Check -> Alnum GREATER_THAN Alnum .)
    COMMA           reduce using rule 16 (Check -> Alnum GREATER_THAN Alnum .)


state 45

    (17) Check -> Alnum LESSER_THAN Alnum .

    R_PARENTHESIS   reduce using rule 17 (Check -> Alnum LESSER_THAN Alnum .)
    SEMICOLON       reduce using rule 17 (Check -> Alnum LESSER_THAN Alnum .)
    COMMA           reduce using rule 17 (Check -> Alnum LESSER_THAN Alnum .)


state 46

    (18) Check -> Alnum GREATER_THAN_OR_EQUAL_TO Alnum .

    R_PARENTHESIS   reduce using rule 18 (Check -> Alnum GREATER_THAN_OR_EQUAL_TO Alnum .)
    SEMICOLON       reduce using rule 18 (Check -> Alnum GREATER_THAN_OR_EQUAL_TO Alnum .)
    COMMA           reduce using rule 18 (Check -> Alnum GREATER_THAN_OR_EQUAL_TO Alnum .)


state 47

    (19) Check -> Alnum LESSER_THAN_OR_EQUAL_TO Alnum .

    R_PARENTHESIS   reduce using rule 19 (Check -> Alnum LESSER_THAN_OR_EQUAL_TO Alnum .)
    SEMICOLON       reduce using rule 19 (Check -> Alnum LESSER_THAN_OR_EQUAL_TO Alnum .)
    COMMA           reduce using rule 19 (Check -> Alnum LESSER_THAN_OR_EQUAL_TO Alnum .)


state 48

    (7) Block -> Newline L_BRACES Newline Body . Newline R_BRACES
    (27) Newline -> . Newline NEWLINE
    (28) Newline -> .

    R_BRACES        reduce using rule 28 (Newline -> .)
    NEWLINE         reduce using rule 28 (Newline -> .)

    Newline                        shift and go to state 53

state 49

    (29) Body -> statement .
    (30) Body -> statement . Body
    (29) Body -> . statement
    (30) Body -> . statement Body
    (31) Body -> . program Body
    (32) Body -> .
    (2) program -> . For
    (3) program -> . While
    (4) program -> . Dowhile
    (8) For -> . for forCondition Block
    (5) While -> . while WhileCondition Block
    (11) Dowhile -> . do Block while WhileCondition

  ! reduce/reduce conflict for R_BRACES resolved using rule 29 (Body -> statement .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 29 (Body -> statement .)
    R_BRACES        reduce using rule 29 (Body -> statement .)
    NEWLINE         reduce using rule 29 (Body -> statement .)
    statement       shift and go to state 49
    for             shift and go to state 6
    while           shift and go to state 7
    do              shift and go to state 8

  ! R_BRACES        [ reduce using rule 32 (Body -> .) ]
  ! NEWLINE         [ reduce using rule 32 (Body -> .) ]

    Body                           shift and go to state 54
    program                        shift and go to state 50
    For                            shift and go to state 3
    While                          shift and go to state 4
    Dowhile                        shift and go to state 5

state 50

    (31) Body -> program . Body
    (29) Body -> . statement
    (30) Body -> . statement Body
    (31) Body -> . program Body
    (32) Body -> .
    (2) program -> . For
    (3) program -> . While
    (4) program -> . Dowhile
    (8) For -> . for forCondition Block
    (5) While -> . while WhileCondition Block
    (11) Dowhile -> . do Block while WhileCondition

    statement       shift and go to state 49
    R_BRACES        reduce using rule 32 (Body -> .)
    NEWLINE         reduce using rule 32 (Body -> .)
    for             shift and go to state 6
    while           shift and go to state 7
    do              shift and go to state 8

    program                        shift and go to state 50
    Body                           shift and go to state 55
    For                            shift and go to state 3
    While                          shift and go to state 4
    Dowhile                        shift and go to state 5

state 51

    (9) forCondition -> L_PARENTHESIS Assign SEMICOLON Check SEMICOLON . Action R_PARENTHESIS
    (20) Action -> . ID INCREMENT
    (21) Action -> . ID DECREMENT
    (22) Action -> . INCREMENT ID
    (23) Action -> . DECREMENT ID
    (24) Action -> . ID ASSIGN ID

    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59

    Action                         shift and go to state 56

state 52

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON . Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS
    (14) Check -> . Alnum EQUALS Alnum
    (15) Check -> . Alnum NOTEQUALS Alnum
    (16) Check -> . Alnum GREATER_THAN Alnum
    (17) Check -> . Alnum LESSER_THAN Alnum
    (18) Check -> . Alnum GREATER_THAN_OR_EQUAL_TO Alnum
    (19) Check -> . Alnum LESSER_THAN_OR_EQUAL_TO Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Check                          shift and go to state 60
    Alnum                          shift and go to state 20

state 53

    (7) Block -> Newline L_BRACES Newline Body Newline . R_BRACES
    (27) Newline -> Newline . NEWLINE

    R_BRACES        shift and go to state 61
    NEWLINE         shift and go to state 25


state 54

    (30) Body -> statement Body .

    R_BRACES        reduce using rule 30 (Body -> statement Body .)
    NEWLINE         reduce using rule 30 (Body -> statement Body .)


state 55

    (31) Body -> program Body .

    R_BRACES        reduce using rule 31 (Body -> program Body .)
    NEWLINE         reduce using rule 31 (Body -> program Body .)


state 56

    (9) forCondition -> L_PARENTHESIS Assign SEMICOLON Check SEMICOLON Action . R_PARENTHESIS

    R_PARENTHESIS   shift and go to state 62


state 57

    (20) Action -> ID . INCREMENT
    (21) Action -> ID . DECREMENT
    (24) Action -> ID . ASSIGN ID

    INCREMENT       shift and go to state 63
    DECREMENT       shift and go to state 64
    ASSIGN          shift and go to state 65


state 58

    (22) Action -> INCREMENT . ID

    ID              shift and go to state 66


state 59

    (23) Action -> DECREMENT . ID

    ID              shift and go to state 67


state 60

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check . COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS

    COMMA           shift and go to state 68


state 61

    (7) Block -> Newline L_BRACES Newline Body Newline R_BRACES .

    while           reduce using rule 7 (Block -> Newline L_BRACES Newline Body Newline R_BRACES .)
    $end            reduce using rule 7 (Block -> Newline L_BRACES Newline Body Newline R_BRACES .)
    statement       reduce using rule 7 (Block -> Newline L_BRACES Newline Body Newline R_BRACES .)
    for             reduce using rule 7 (Block -> Newline L_BRACES Newline Body Newline R_BRACES .)
    do              reduce using rule 7 (Block -> Newline L_BRACES Newline Body Newline R_BRACES .)
    R_BRACES        reduce using rule 7 (Block -> Newline L_BRACES Newline Body Newline R_BRACES .)
    NEWLINE         reduce using rule 7 (Block -> Newline L_BRACES Newline Body Newline R_BRACES .)


state 62

    (9) forCondition -> L_PARENTHESIS Assign SEMICOLON Check SEMICOLON Action R_PARENTHESIS .

    L_BRACES        reduce using rule 9 (forCondition -> L_PARENTHESIS Assign SEMICOLON Check SEMICOLON Action R_PARENTHESIS .)
    NEWLINE         reduce using rule 9 (forCondition -> L_PARENTHESIS Assign SEMICOLON Check SEMICOLON Action R_PARENTHESIS .)


state 63

    (20) Action -> ID INCREMENT .

    R_PARENTHESIS   reduce using rule 20 (Action -> ID INCREMENT .)
    COMMA           reduce using rule 20 (Action -> ID INCREMENT .)


state 64

    (21) Action -> ID DECREMENT .

    R_PARENTHESIS   reduce using rule 21 (Action -> ID DECREMENT .)
    COMMA           reduce using rule 21 (Action -> ID DECREMENT .)


state 65

    (24) Action -> ID ASSIGN . ID

    ID              shift and go to state 69


state 66

    (22) Action -> INCREMENT ID .

    R_PARENTHESIS   reduce using rule 22 (Action -> INCREMENT ID .)
    COMMA           reduce using rule 22 (Action -> INCREMENT ID .)


state 67

    (23) Action -> DECREMENT ID .

    R_PARENTHESIS   reduce using rule 23 (Action -> DECREMENT ID .)
    COMMA           reduce using rule 23 (Action -> DECREMENT ID .)


state 68

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA . Check SEMICOLON Action COMMA Action R_PARENTHESIS
    (14) Check -> . Alnum EQUALS Alnum
    (15) Check -> . Alnum NOTEQUALS Alnum
    (16) Check -> . Alnum GREATER_THAN Alnum
    (17) Check -> . Alnum LESSER_THAN Alnum
    (18) Check -> . Alnum GREATER_THAN_OR_EQUAL_TO Alnum
    (19) Check -> . Alnum LESSER_THAN_OR_EQUAL_TO Alnum
    (25) Alnum -> . ID
    (26) Alnum -> . NUMBER

    ID              shift and go to state 21
    NUMBER          shift and go to state 22

    Check                          shift and go to state 70
    Alnum                          shift and go to state 20

state 69

    (24) Action -> ID ASSIGN ID .

    R_PARENTHESIS   reduce using rule 24 (Action -> ID ASSIGN ID .)
    COMMA           reduce using rule 24 (Action -> ID ASSIGN ID .)


state 70

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check . SEMICOLON Action COMMA Action R_PARENTHESIS

    SEMICOLON       shift and go to state 71


state 71

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON . Action COMMA Action R_PARENTHESIS
    (20) Action -> . ID INCREMENT
    (21) Action -> . ID DECREMENT
    (22) Action -> . INCREMENT ID
    (23) Action -> . DECREMENT ID
    (24) Action -> . ID ASSIGN ID

    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59

    Action                         shift and go to state 72

state 72

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action . COMMA Action R_PARENTHESIS

    COMMA           shift and go to state 73


state 73

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA . Action R_PARENTHESIS
    (20) Action -> . ID INCREMENT
    (21) Action -> . ID DECREMENT
    (22) Action -> . INCREMENT ID
    (23) Action -> . DECREMENT ID
    (24) Action -> . ID ASSIGN ID

    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59

    Action                         shift and go to state 74

state 74

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action . R_PARENTHESIS

    R_PARENTHESIS   shift and go to state 75


state 75

    (10) forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS .

    L_BRACES        reduce using rule 10 (forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS .)
    NEWLINE         reduce using rule 10 (forCondition -> L_PARENTHESIS Assign COMMA Assign SEMICOLON Check COMMA Check SEMICOLON Action COMMA Action R_PARENTHESIS .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 37 resolved as shift
WARNING: reduce/reduce conflict in state 49 resolved using rule (Body -> statement)
WARNING: rejected rule (Body -> <empty>) in state 49
